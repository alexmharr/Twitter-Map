X2099 = ((CC2099 - NC2099) / NC2099 * 100))
world <- map_data("world")
try <- iso.alpha(world$region, n = 3)
world <- world %>% mutate(ISO3 = try)
map.climate <- combined %>% select(ISO3, X2025, X2050, X2075, X2099)
map <- left_join(world, map.climate)
map.group <- map %>% gather("Year", "Change in GDP", X2025:X2099)
max(map.group$`Change in GDP`)
b <- c(-100, -50, -25, 0,  25, 50, 100, 400, 2000)
label <- c("-100 to -50", "-50 to -25", "-25 to 25", "25 to 50", "50 to 100","100 - 400","400 to 800", " > 800")
map.group <- map.group %>% mutate(groups = cut(map.group$`Change in GDP`,
breaks = b, labels = label))
plot(ggplot() +
geom_polygon(data = map.group, aes(x = long, y = lat, group = group, fill = groups), color = "black", size = .025) +
theme_nothing(legend = TRUE) +
scale_color_brewer(palette = "Set1") +
facet_wrap(~Year))
library(plotly)
library(dplyr)
library(reshape2)
library(ggplot2)
library(tidyr)
library(ggthemes)
library(ggmap)
knitr::opts_chunk$set(echo = TRUE)
country.indicators <- read.csv("data/CountryIndicators - Definition and Source.csv", stringsAsFactors = FALSE)
GDP.climate.change <- read.csv("data/GDPcap_ClimateChange_RCP85_SSP5.csv", stringsAsFactors = FALSE)
GDP.no.climate.change <- read.csv("data/GDPcap_NOClimateChange_RCP85_SSP5.csv", stringsAsFactors = FALSE)
word.bank <- read.csv("data/WorldBank_CountryIndicators.csv")
cc.20.years <- GDP.climate.change %>% select(ISO3, meantemp,  CC2025 = X2025, CC2050 = X2050,
CC2075 = X2075, CC2099 = X2099)
nc.20.years <- GDP.no.climate.change %>% select(ISO3, meantemp, NC2025 = X2025, NC2050 = X2050,
NC2075 = X2075, NC2099 = X2099)
combined <- left_join(nc.20.years, cc.20.years, by = "ISO3") %>%
mutate(X2025 = ((CC2025 - NC2025) / NC2025 * 100),
X2050 = ((CC2050 - NC2050) / NC2050 * 100),
X2075 = ((CC2075 - NC2075) / NC2075 * 100),
X2099 = ((CC2099 - NC2099) / NC2099 * 100))
cc.20.years <- cc.20.years %>% mutate(difference.CC = CC2099 - CC2025)
wd <- select(word.bank, ISO3 = Country.Code, Series.Name, value) %>% filter(Series.Name == "Life expectancy at birth, total (years)") %>% select(ISO3, Life_Expectancy = value)
df <- cc.20.years %>% select(ISO3, meantemp, Change = difference.CC, CC2025:CC2099)
df <- left_join(df, wd, by = "ISO3")
plot(ggplot(data = df, aes(x = Life_Expectancy, y = Change)) +
geom_point() +
geom_smooth())
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3), position = "jitter"))
world <- map_data("world")
try <- iso.alpha(world$region, n = 3)
world <- world %>% mutate(ISO3 = try)
map.climate <- combined %>% select(ISO3, X2025, X2050, X2075, X2099)
map <- left_join(world, map.climate)
map.group <- map %>% gather("Year", "Change in GDP", X2025:X2099)
max(map.group$`Change in GDP`)
b <- c(-100, -50, -25, 0,  25, 50, 100, 400, 2000)
label <- c("-100 to -50", "-50 to -25", "-25 to 25", "25 to 50", "50 to 100","100 - 400","400 to 800", " > 800")
map.group <- map.group %>% mutate(groups = cut(map.group$`Change in GDP`,
breaks = b, labels = label))
plot(ggplot() +
geom_polygon(data = map.group, aes(x = long, y = lat, group = group, fill = groups), color = "black", size = .025) +
theme_nothing(legend = TRUE) +
scale_color_brewer(palette = "Set1") +
facet_wrap(~Year))
cc.df <- GDP.climate.change %>% select(ISO3, climate.diff =  X2099 - X2010)
nc.df <- GDP.no.climate.change %>% select(ISO3, diff = X2099 - X2010)
df <- left_join(nc.df, cc.df)
df <- left_join(df, world) %>% mutate(total.diff = climate.diff - diff) %>%
select(ISO3, total.diff, region)
deduped.df <- unique(df)
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(showframe = FALSE, showcoastlines = FALSE, projection = list(type = 'Mercator'))
#p <- ggplot() +
#  geom_polygon(data = df, aes(x = long, y = lat, fill = total.diff, group = group), size = .025) +
# theme_nothing(legend = TRUE) +
# scale_color_brewer(palette = "Set1")
#ggplotly(p)
plot_geo(deduped.df) %>%
add_trace(z = ~total.diff, color = ~total.diff, colors = "Blues", text = ~region,
locations = ~ISO3, marker = list(line = l)) %>%
layout(title = "Change in % GDP from 2025 - 2099", geo = g) %>%
colorbar(title = "Change in % GDP", tickprefix = "%")
cc.df <- GDP.climate.change %>% select(ISO3, climate.diff =  X2099 - X2010)
nc.df <- GDP.no.climate.change %>% select(ISO3, diff = X2099 - X2010)
df <- left_join(nc.df, cc.df)
df <- left_join(df, world) %>% mutate(total.diff = climate.diff - diff) %>%
select(ISO3, total.diff, region)
deduped.df <- unique(df)
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(showframe = FALSE, showcoastlines = FALSE, projection = list(type = 'Mercator'))
#p <- ggplot() +
#  geom_polygon(data = df, aes(x = long, y = lat, fill = total.diff, group = group), size = .025) +
# theme_nothing(legend = TRUE) +
# scale_color_brewer(palette = "Set1")
#ggplotly(p)
plot_geo(deduped.df) %>%
add_trace(z = ~total.diff, color = ~total.diff, colors = "Purples", text = ~region,
locations = ~ISO3, marker = list(line = l)) %>%
layout(title = "Change in % GDP from 2025 - 2099", geo = g) %>%
colorbar(title = "Change in GDP %", tickprefix = " %")
world <- map_data("world")
try <- iso.alpha(world$region, n = 3)
world <- world %>% mutate(ISO3 = try)
map.climate <- combined %>% select(ISO3, X2025, X2050, X2075, X2099)
map <- left_join(world, map.climate)
map.group <- map %>% gather("Year", "Change in GDP", X2025:X2099)
max(map.group$`Change in GDP`)
b <- c(-100, -50, -25, 0,  25, 50, 100, 400, 2000)
label <- c("-100 to -50", "-50 to -25", "-25 to 25", "25 to 50", "50 to 100","100 - 400","400 to 800", " > 800")
map.group <- map.group %>% mutate(groups = cut(map.group$`Change in GDP`,
breaks = b, labels = label))
plot(ggplot() +
geom_polygon(data = map.group, aes(x = long, y = lat, group = group, fill = groups), color = "black", size = .025) +
theme_nothing(legend = TRUE) +
scale_color_brewer(palette = "Set1") +
facet_wrap(~Year)) +
labs(title = "Change in Percent GDP", color = "Percent Change")
world <- map_data("world")
try <- iso.alpha(world$region, n = 3)
world <- world %>% mutate(ISO3 = try)
map.climate <- combined %>% select(ISO3, X2025, X2050, X2075, X2099)
map <- left_join(world, map.climate)
map.group <- map %>% gather("Year", "Change in GDP", X2025:X2099)
max(map.group$`Change in GDP`)
b <- c(-100, -50, -25, 0,  25, 50, 100, 400, 2000)
label <- c("-100 to -50", "-50 to -25", "-25 to 25", "25 to 50", "50 to 100","100 - 400","400 to 800", " > 800")
map.group <- map.group %>% mutate(groups = cut(map.group$`Change in GDP`,
breaks = b, labels = label))
plot(ggplot() +
geom_polygon(data = map.group, aes(x = long, y = lat, group = group, fill = groups), color = "black", size = .025) +
theme_nothing(legend = TRUE) +
scale_color_brewer(palette = "Set1") +
labs(title = "Change in Percent GDP", color = "Percent Change") +
facet_wrap(~Year))
plot(ggplot() +
geom_polygon(data = map.group, aes(x = long, y = lat, group = group, fill = groups), color = "black", size = .025) +
theme_nothing(legend = TRUE) +
scale_color_brewer(palette = "Set1") +
labs(title = "Change in Percent GDP", fill = "Percent Change") +
facet_wrap(~Year))
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3), position = "jitter"))
View(percent.change)
percent.change <- combined %>% select(ISO3, X2025:X2099)
View(percent.change)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
#percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3), position = "jitter"))
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3), position = "jitter")) +
lab(color = FALSE)
percent.change <- combined %>% select(ISO3, X2025:X2099)
View(percent.change)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
#percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3), position = "jitter")) +
labs(color = FALSE)
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
#percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3), position = "jitter")) +
theme_base(legend = FALSE)
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
#percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3), position = "jitter")) +
theme_base()
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
#percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3), position = "jitter")) +
scale_fill_discrete(guide = FALSE)
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
#percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3), position = "jitter")) +
scale_fill_discrete(guide = FALSE))
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
#percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3), position = "jitter") +
scale_fill_discrete(guide = FALSE))
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
#percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3), position = "jitter") +
theme(legend.text = "Countries"))
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
#percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3), position = "jitter") +
theme(legend.position = "none"))
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
#percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_histogram(mapping = aes(y = GDP, x = Year, color = ISO3)) +
theme(legend.position = "none"))
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
#percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_bar(mapping = aes(y = GDP, x = Year, color = ISO3), stat = GDP) +
theme(legend.position = "none"))
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_bar(mapping = aes(y = GDP, x = Year, color = ISO3), stat = GDP) +
theme(legend.position = "none"))
plot(ggplot(data = percent.m) +
geom_bar(mapping = aes(, x = Year, color = ISO3), stat = "GDP") +
theme(legend.position = "none"))
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
#percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_bar(mapping = aes(x = GDP, color = ISO3)) +
theme(legend.position = "none"))
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
#percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3)) +
theme(legend.position = "none"))
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3)) +
theme(legend.position = "none"))
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3), position = "dodge") +
theme(legend.position = "none"))
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3), position = position_dodge(width = 3)) +
theme(legend.position = "none"))
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
#percent.m <- sample_n(percent.m, 40)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3), position = position_dodge(width = 3)) +
theme(legend.position = "none"))
percent.change <- combined %>% select(ISO3, X2025:X2099)
percent.m <- melt(percent.change, id.vars = "ISO3", measure.vars = grep("X", names(percent.change), value = TRUE))
percent.m <- sample_n(percent.m, 50)
percent.m <- select(percent.m, ISO3, Year = variable, GDP = value)
plot(ggplot(data = percent.m) +
geom_point(mapping = aes(y = GDP, x = Year, color = ISO3), position = position_dodge(width = 3)) +
theme(legend.position = "none"))
library(shiny)
df <- data("iris")
View(df)
df <- data("iris")
View(df)
library(iris)
data(iris)
data("iris")
?data
df <- data("iris")
View(df)
df <- data(iris)
View(df)
is.data.frame((df))
is.table(iris)
df <- data("iris")
is.data.frame(df)
is.table(df)
is.vector(df)
install.packages("shiny")
library(shiny)
View(shiny)
df <- data("iris")
View(df)
data("iris")
df <- iris
install.packages("shiny")
library(dplyr)
library(shiny)
library(dplyr)
data("iris")
df <- data("iris")
data("iris")
df <- data("iris")
library("iris")
?iris
df <- data.frame("iris")
library("iris")
data("iris")
data.frame(iris)
setwd("~/Documents/Winter_Quarter/INFO-201/Assignments/Twitter/Twitter-Map")
library(dplyr)
library(data.table)
library(ggplot2)
library(ggvis)
library(rgdal)
library(mapproj)
library(leaflet)
library(twitteR)
library(ggmap)
library(KernSmooth)
state <- map("state", fill = TRUE, plot = FALSE)
uw.followers <- read.csv("Data/UW_Followers", stringsAsFactors = FALSE)
nrow(american_results)
names <- uw.followers %>% select(screenName)
names <- sample_n(names, nrow(american_results))
row.names(names) <- NULL
american_results <- read.csv("Data/american_results", stringsAsFactors = FALSE)
american_results <- american_results %>% filter(lng >-125)
american_results <- read.csv("Data/american_results", stringsAsFactors = FALSE)
american_results <- american_results %>% filter(lng >-125)
state <- map("state", fill = TRUE, plot = FALSE)
uw.followers <- read.csv("Data/UW_Followers", stringsAsFactors = FALSE)
nrow(american_results)
names <- uw.followers %>% select(screenName)
names <- sample_n(names, nrow(american_results))
row.names(names) <- NULL
american_results$screenName <- names$screenName
View(uw.followers)
View(american_results)
coords <- american_results %>% select(lng, lat)
coords <- data.table(coords)
View(coords)
kde <- bkde2D(coords[ , list(lng, lat)],
bandwidth=c(.0045, .0068), gridsize = c(500,500))
kde <- bkde2D(coords[ , list(lng, lat)],
bandwidth=c(.0045, .0068), gridsize = c(1000,1000))
CL <- contourLines(kde$x1 , kde$x2 , kde$fhat)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>% addTiles() %>%
addPolygons(color = heat.colors(NLEV, NULL)[LEVS])
kde <- bkde2D(coords[ , list(lng, lat)],
bandwidth=c(.5, .5), gridsize = c(1000,1000))
CL <- contourLines(kde$x1 , kde$x2 , kde$fhat)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>% addTiles() %>%
addPolygons(color = heat.colors(NLEV, NULL)[LEVS])
leaflet() %>%
addTiles() %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -98.35, lat = 39.5, zoom = 3) %>%
addCircleMarkers(data = american_results,
radius = 4,
color = "navy",
stroke = FALSE,
fillOpacity = 0.5
) %>% addPolygons(CL[[5]]$x,CL[[5]]$y,fillColor = "red", stroke = FALSE)
X=cbind(coords$lng, coords$lat)
kde2d <- bkde2D(X, bandwidth=c(bw.ucv(X[,1]),bw.ucv(X[,2])))
x=kde2d$x1
y=kde2d$x2
z=kde2d$fhat
CL=contourLines(x , y , z)
leaflet() %>%
addTiles() %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -98.35, lat = 39.5, zoom = 3) %>%
addCircleMarkers(data = american_results,
radius = 4,
color = "navy",
stroke = FALSE,
fillOpacity = 0.5
) %>% addPolygons(CL[[5]]$x,CL[[5]]$y,fillColor = "red", stroke = FALSE)
leaflet() %>% addTiles() %>%
addPolygons(CL[[5]]$x,CL[[5]]$y,fillColor = "red", stroke = FALSE)
?grepl
american.Leaflet <- toGeoJSON(american_results)
install.packages("leafletR")
library(leafletR)
american.Leaflet <- toGeoJSON(american_results)
?toGeoJSON
american.Leaflet <- toGeoJSON(c(american_results$lat, american_results$lng))
american_results <- american_results %>% select(Location, lat, lng, ScreenName)
american_results <- american_results %>% select(Location, lat, lng, screenName)
american.Leaflet <- toGeoJSON(american_results)
american_results <- american_results %>% select(Location, lat, lon = lng, screenName)
american.Leaflet <- toGeoJSON(american_results)
View(uw.followers)
names <- uw.followers %>% select(screenName, friendsCount)
names <- sample_n(names, nrow(american_results))
row.names(names) <- NULL
american_results$screenName <- names$screenName
american_results$friends <- names$friendsCount
american_results <- american_results %>% select(Location, lat, lon = lng, screenName, friendsCount)
american_results <- american_results %>% select(Location, lat, lon , screenName, friendsCount)
american_results <- read.csv("Data/american_results", stringsAsFactors = FALSE)
american_results <- american_results %>% filter(lng >-125)
names <- uw.followers %>% select(screenName, friendsCount)
names <- sample_n(names, nrow(american_results))
row.names(names) <- NULL
american_results$screenName <- names$screenName
american_results$friends <- names$friendsCount
american_results$screenName <- names$screenName
american_results$friends <- names$friendsCount
american_results <- american_results %>% select(Location, lat, lng , screenName, friendsCount)
american_results <- american_results %>% select(Location, lat, lng , screenName, friends)
coords <- american_results %>% select(lat, lng)
american.Leaflet <- toGeoJSON(coords)
map.style <- styleGrad(pro="friends",
breaks=seq(min(american_results$friends),max(american_results$friends)+15,by=20),
style.val=cm.colors(10),leg="Number of Friends", fill.alpha=0.4, lwd=0)
max(american_results$friends)
?cm.colors
map.style <- styleGrad(pro="friends",
breaks=seq(min(american_results$friends),max(american_results$friends)+15,by=20),
style.val=cm.colors(8609),leg="Number of Friends", fill.alpha=0.4, lwd=0)
leaflet(american.Leaflet,popup=c("name","Intensity","Intensity.Area"),style=map.style)
leaflet(american.Leaflet) %>%
addTiles()
leaflet() %>%
addTiles()
leaflet() %>%
addTiles()
leaflet() %>%
addTiles() %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -98.35, lat = 39.5, zoom = 3) %>%
addCircleMarkers(data = american_results,
radius = 4,
color = "navy",
stroke = FALSE,
fillOpacity = 0.5
)
leaflet() %>%
addTiles() %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -98.35, lat = 39.5, zoom = 3) %>%
addCircleMarkers(data = american_results,
radius = 4,
color = "navy",
stroke = FALSE,
fillOpacity = 0.5
)
library(dplyr)
library(data.table)
library(ggplot2)
library(ggvis)
library(rgdal)
library(mapproj)
library(leaflet)
library(twitteR)
library(ggmap)
state <- map("state", fill = TRUE, plot = FALSE)
american_results <- read.csv("Data/american_results", stringsAsFactors = FALSE)
american_results <- american_results %>% filter(lng >-125)
uw.followers <- read.csv("Data/UW_Followers", stringsAsFactors = FALSE)
View(uw.followers)
nrow(american_results)
names <- uw.followers %>% select(screenName, friendsCount)
names <- sample_n(names, nrow(american_results))
row.names(names) <- NULL
american_results$screenName <- names$screenName
american_results$friends <- names$friendsCount
american_results <- american_results %>% select(Location, lat, lng , screenName, friends)
leaflet() %>%
addTiles() %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -98.35, lat = 39.5, zoom = 3) %>%
addCircleMarkers(data = american_results,
radius = 4,
color = "navy",
stroke = FALSE,
fillOpacity = 0.5
)
